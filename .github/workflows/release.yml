on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Create Release

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 3.1.102

      - name: Build
        run: |
          dotnet publish -c Release --runtime linux-x64
          dotnet publish -c Release --runtime win-x64
          dotnet publish -c Release --runtime osx-x64

      - name: Pack Files
        run: |
          mv bin/Release/netcoreapp3.1/linux-x64/publish/AlphaSecret .
          GZIP=-9 tar -czvf AlphaSecret-linux-x64.tar.gz ./AlphaSecret
          rm AlphaSecret

          mv bin/Release/netcoreapp3.1/win-x64/publish/AlphaSecret.exe .
          zip -9 --junk-paths AlphaSecret-win-x64.zip ./AlphaSecret.exe
          rm AlphaSecret.exe

          mv bin/Release/netcoreapp3.1/osx-x64/publish/AlphaSecret .
          GZIP=-9 tar -czvf AlphaSecret-osx-x64.tar.gz ./AlphaSecret
          rm AlphaSecret

      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Linux Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./AlphaSecret-linux-x64.tar.gz
          asset_name: AlphaSecret-linux-x64.tar.gz
          asset_content_type: application/gzip

      - name: Upload Windows Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./AlphaSecret-win-x64.zip
          asset_name: AlphaSecret-win-x64.zip
          asset_content_type: application/zip

      - name: Upload OSX Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./AlphaSecret-osx-x64.tar.gz
          asset_name: AlphaSecret-osx-x64.tar.gz
          asset_content_type: application/gzip
